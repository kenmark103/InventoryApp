/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedSuppliersSupplierIdImport } from './routes/_authenticated/suppliers/$supplierId'
import { Route as AuthenticatedSalesSalesordersImport } from './routes/_authenticated/sales/salesorders'
import { Route as AuthenticatedSalesIdImport } from './routes/_authenticated/sales/$id'
import { Route as AuthenticatedReportsSalesReportImport } from './routes/_authenticated/reports/sales-report'
import { Route as AuthenticatedReportsProfitLossImport } from './routes/_authenticated/reports/profit-loss'
import { Route as AuthenticatedReportsInventoryImport } from './routes/_authenticated/reports/inventory'
import { Route as AuthenticatedReportsExpensesImport } from './routes/_authenticated/reports/expenses'
import { Route as AuthenticatedReportsCashFlowImport } from './routes/_authenticated/reports/cash-flow'
import { Route as AuthenticatedReportsBalanceSheetImport } from './routes/_authenticated/reports/balance-sheet'
import { Route as AuthenticatedReportsAccountingImport } from './routes/_authenticated/reports/accounting'
import { Route as AuthenticatedProductsStockManagementImport } from './routes/_authenticated/products/stock-management'
import { Route as AuthenticatedProductsAddImport } from './routes/_authenticated/products/add'
import { Route as AuthenticatedCustomersCustomerIdImport } from './routes/_authenticated/customers/$customerId'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedUsersIndexLazyImport = createFileRoute(
  '/_authenticated/users/',
)()
const AuthenticatedSuppliersIndexLazyImport = createFileRoute(
  '/_authenticated/suppliers/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedSalesIndexLazyImport = createFileRoute(
  '/_authenticated/sales/',
)()
const AuthenticatedReportsIndexLazyImport = createFileRoute(
  '/_authenticated/reports/',
)()
const AuthenticatedPurchaseIndexLazyImport = createFileRoute(
  '/_authenticated/purchase/',
)()
const AuthenticatedProductsIndexLazyImport = createFileRoute(
  '/_authenticated/products/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedExpensesIndexLazyImport = createFileRoute(
  '/_authenticated/expenses/',
)()
const AuthenticatedCustomersIndexLazyImport = createFileRoute(
  '/_authenticated/customers/',
)()
const AuthenticatedChatsIndexLazyImport = createFileRoute(
  '/_authenticated/chats/',
)()
const AuthenticatedCategoriesIndexLazyImport = createFileRoute(
  '/_authenticated/categories/',
)()
const AuthenticatedAppsIndexLazyImport = createFileRoute(
  '/_authenticated/apps/',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedExpensesApproveIndexLazyImport = createFileRoute(
  '/_authenticated/expenses/approve/',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexLazyRoute =
  AuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSuppliersIndexLazyRoute =
  AuthenticatedSuppliersIndexLazyImport.update({
    id: '/suppliers/',
    path: '/suppliers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/suppliers/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSalesIndexLazyRoute =
  AuthenticatedSalesIndexLazyImport.update({
    id: '/sales/',
    path: '/sales/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/sales/index.lazy').then((d) => d.Route),
  )

const AuthenticatedReportsIndexLazyRoute =
  AuthenticatedReportsIndexLazyImport.update({
    id: '/reports/',
    path: '/reports/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/reports/index.lazy').then((d) => d.Route),
  )

const AuthenticatedPurchaseIndexLazyRoute =
  AuthenticatedPurchaseIndexLazyImport.update({
    id: '/purchase/',
    path: '/purchase/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/purchase/index.lazy').then((d) => d.Route),
  )

const AuthenticatedProductsIndexLazyRoute =
  AuthenticatedProductsIndexLazyImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/products/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedExpensesIndexLazyRoute =
  AuthenticatedExpensesIndexLazyImport.update({
    id: '/expenses/',
    path: '/expenses/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/expenses/index.lazy').then((d) => d.Route),
  )

const AuthenticatedCustomersIndexLazyRoute =
  AuthenticatedCustomersIndexLazyImport.update({
    id: '/customers/',
    path: '/customers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/customers/index.lazy').then((d) => d.Route),
  )

const AuthenticatedChatsIndexLazyRoute =
  AuthenticatedChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/chats/index.lazy').then((d) => d.Route),
  )

const AuthenticatedCategoriesIndexLazyRoute =
  AuthenticatedCategoriesIndexLazyImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/categories/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedAppsIndexLazyRoute = AuthenticatedAppsIndexLazyImport.update(
  {
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/apps/index.lazy').then((d) => d.Route),
)

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSuppliersSupplierIdRoute =
  AuthenticatedSuppliersSupplierIdImport.update({
    id: '/suppliers/$supplierId',
    path: '/suppliers/$supplierId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSalesSalesordersRoute =
  AuthenticatedSalesSalesordersImport.update({
    id: '/sales/salesorders',
    path: '/sales/salesorders',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSalesIdRoute = AuthenticatedSalesIdImport.update({
  id: '/sales/$id',
  path: '/sales/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedReportsSalesReportRoute =
  AuthenticatedReportsSalesReportImport.update({
    id: '/reports/sales-report',
    path: '/reports/sales-report',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsProfitLossRoute =
  AuthenticatedReportsProfitLossImport.update({
    id: '/reports/profit-loss',
    path: '/reports/profit-loss',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsInventoryRoute =
  AuthenticatedReportsInventoryImport.update({
    id: '/reports/inventory',
    path: '/reports/inventory',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsExpensesRoute =
  AuthenticatedReportsExpensesImport.update({
    id: '/reports/expenses',
    path: '/reports/expenses',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsCashFlowRoute =
  AuthenticatedReportsCashFlowImport.update({
    id: '/reports/cash-flow',
    path: '/reports/cash-flow',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsBalanceSheetRoute =
  AuthenticatedReportsBalanceSheetImport.update({
    id: '/reports/balance-sheet',
    path: '/reports/balance-sheet',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedReportsAccountingRoute =
  AuthenticatedReportsAccountingImport.update({
    id: '/reports/accounting',
    path: '/reports/accounting',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductsStockManagementRoute =
  AuthenticatedProductsStockManagementImport.update({
    id: '/products/stock-management',
    path: '/products/stock-management',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductsAddRoute = AuthenticatedProductsAddImport.update({
  id: '/products/add',
  path: '/products/add',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedCustomersCustomerIdRoute =
  AuthenticatedCustomersCustomerIdImport.update({
    id: '/customers/$customerId',
    path: '/customers/$customerId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedExpensesApproveIndexLazyRoute =
  AuthenticatedExpensesApproveIndexLazyImport.update({
    id: '/expenses/approve/',
    path: '/expenses/approve/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/expenses/approve/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/customers/$customerId': {
      id: '/_authenticated/customers/$customerId'
      path: '/customers/$customerId'
      fullPath: '/customers/$customerId'
      preLoaderRoute: typeof AuthenticatedCustomersCustomerIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/add': {
      id: '/_authenticated/products/add'
      path: '/products/add'
      fullPath: '/products/add'
      preLoaderRoute: typeof AuthenticatedProductsAddImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/stock-management': {
      id: '/_authenticated/products/stock-management'
      path: '/products/stock-management'
      fullPath: '/products/stock-management'
      preLoaderRoute: typeof AuthenticatedProductsStockManagementImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/accounting': {
      id: '/_authenticated/reports/accounting'
      path: '/reports/accounting'
      fullPath: '/reports/accounting'
      preLoaderRoute: typeof AuthenticatedReportsAccountingImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/balance-sheet': {
      id: '/_authenticated/reports/balance-sheet'
      path: '/reports/balance-sheet'
      fullPath: '/reports/balance-sheet'
      preLoaderRoute: typeof AuthenticatedReportsBalanceSheetImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/cash-flow': {
      id: '/_authenticated/reports/cash-flow'
      path: '/reports/cash-flow'
      fullPath: '/reports/cash-flow'
      preLoaderRoute: typeof AuthenticatedReportsCashFlowImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/expenses': {
      id: '/_authenticated/reports/expenses'
      path: '/reports/expenses'
      fullPath: '/reports/expenses'
      preLoaderRoute: typeof AuthenticatedReportsExpensesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/inventory': {
      id: '/_authenticated/reports/inventory'
      path: '/reports/inventory'
      fullPath: '/reports/inventory'
      preLoaderRoute: typeof AuthenticatedReportsInventoryImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/profit-loss': {
      id: '/_authenticated/reports/profit-loss'
      path: '/reports/profit-loss'
      fullPath: '/reports/profit-loss'
      preLoaderRoute: typeof AuthenticatedReportsProfitLossImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/sales-report': {
      id: '/_authenticated/reports/sales-report'
      path: '/reports/sales-report'
      fullPath: '/reports/sales-report'
      preLoaderRoute: typeof AuthenticatedReportsSalesReportImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sales/$id': {
      id: '/_authenticated/sales/$id'
      path: '/sales/$id'
      fullPath: '/sales/$id'
      preLoaderRoute: typeof AuthenticatedSalesIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sales/salesorders': {
      id: '/_authenticated/sales/salesorders'
      path: '/sales/salesorders'
      fullPath: '/sales/salesorders'
      preLoaderRoute: typeof AuthenticatedSalesSalesordersImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/suppliers/$supplierId': {
      id: '/_authenticated/suppliers/$supplierId'
      path: '/suppliers/$supplierId'
      fullPath: '/suppliers/$supplierId'
      preLoaderRoute: typeof AuthenticatedSuppliersSupplierIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/categories/': {
      id: '/_authenticated/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof AuthenticatedCategoriesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/customers/': {
      id: '/_authenticated/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AuthenticatedCustomersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/expenses/': {
      id: '/_authenticated/expenses/'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof AuthenticatedExpensesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/': {
      id: '/_authenticated/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/purchase/': {
      id: '/_authenticated/purchase/'
      path: '/purchase'
      fullPath: '/purchase'
      preLoaderRoute: typeof AuthenticatedPurchaseIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reports/': {
      id: '/_authenticated/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof AuthenticatedReportsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sales/': {
      id: '/_authenticated/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof AuthenticatedSalesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/suppliers/': {
      id: '/_authenticated/suppliers/'
      path: '/suppliers'
      fullPath: '/suppliers'
      preLoaderRoute: typeof AuthenticatedSuppliersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/expenses/approve/': {
      id: '/_authenticated/expenses/approve/'
      path: '/expenses/approve'
      fullPath: '/expenses/approve'
      preLoaderRoute: typeof AuthenticatedExpensesApproveIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsAppearanceLazyRoute:
      AuthenticatedSettingsAppearanceLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedCustomersCustomerIdRoute: typeof AuthenticatedCustomersCustomerIdRoute
  AuthenticatedProductsAddRoute: typeof AuthenticatedProductsAddRoute
  AuthenticatedProductsStockManagementRoute: typeof AuthenticatedProductsStockManagementRoute
  AuthenticatedReportsAccountingRoute: typeof AuthenticatedReportsAccountingRoute
  AuthenticatedReportsBalanceSheetRoute: typeof AuthenticatedReportsBalanceSheetRoute
  AuthenticatedReportsCashFlowRoute: typeof AuthenticatedReportsCashFlowRoute
  AuthenticatedReportsExpensesRoute: typeof AuthenticatedReportsExpensesRoute
  AuthenticatedReportsInventoryRoute: typeof AuthenticatedReportsInventoryRoute
  AuthenticatedReportsProfitLossRoute: typeof AuthenticatedReportsProfitLossRoute
  AuthenticatedReportsSalesReportRoute: typeof AuthenticatedReportsSalesReportRoute
  AuthenticatedSalesIdRoute: typeof AuthenticatedSalesIdRoute
  AuthenticatedSalesSalesordersRoute: typeof AuthenticatedSalesSalesordersRoute
  AuthenticatedSuppliersSupplierIdRoute: typeof AuthenticatedSuppliersSupplierIdRoute
  AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
  AuthenticatedCategoriesIndexLazyRoute: typeof AuthenticatedCategoriesIndexLazyRoute
  AuthenticatedChatsIndexLazyRoute: typeof AuthenticatedChatsIndexLazyRoute
  AuthenticatedCustomersIndexLazyRoute: typeof AuthenticatedCustomersIndexLazyRoute
  AuthenticatedExpensesIndexLazyRoute: typeof AuthenticatedExpensesIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedProductsIndexLazyRoute: typeof AuthenticatedProductsIndexLazyRoute
  AuthenticatedPurchaseIndexLazyRoute: typeof AuthenticatedPurchaseIndexLazyRoute
  AuthenticatedReportsIndexLazyRoute: typeof AuthenticatedReportsIndexLazyRoute
  AuthenticatedSalesIndexLazyRoute: typeof AuthenticatedSalesIndexLazyRoute
  AuthenticatedSuppliersIndexLazyRoute: typeof AuthenticatedSuppliersIndexLazyRoute
  AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
  AuthenticatedExpensesApproveIndexLazyRoute: typeof AuthenticatedExpensesApproveIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedCustomersCustomerIdRoute: AuthenticatedCustomersCustomerIdRoute,
  AuthenticatedProductsAddRoute: AuthenticatedProductsAddRoute,
  AuthenticatedProductsStockManagementRoute:
    AuthenticatedProductsStockManagementRoute,
  AuthenticatedReportsAccountingRoute: AuthenticatedReportsAccountingRoute,
  AuthenticatedReportsBalanceSheetRoute: AuthenticatedReportsBalanceSheetRoute,
  AuthenticatedReportsCashFlowRoute: AuthenticatedReportsCashFlowRoute,
  AuthenticatedReportsExpensesRoute: AuthenticatedReportsExpensesRoute,
  AuthenticatedReportsInventoryRoute: AuthenticatedReportsInventoryRoute,
  AuthenticatedReportsProfitLossRoute: AuthenticatedReportsProfitLossRoute,
  AuthenticatedReportsSalesReportRoute: AuthenticatedReportsSalesReportRoute,
  AuthenticatedSalesIdRoute: AuthenticatedSalesIdRoute,
  AuthenticatedSalesSalesordersRoute: AuthenticatedSalesSalesordersRoute,
  AuthenticatedSuppliersSupplierIdRoute: AuthenticatedSuppliersSupplierIdRoute,
  AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
  AuthenticatedCategoriesIndexLazyRoute: AuthenticatedCategoriesIndexLazyRoute,
  AuthenticatedChatsIndexLazyRoute: AuthenticatedChatsIndexLazyRoute,
  AuthenticatedCustomersIndexLazyRoute: AuthenticatedCustomersIndexLazyRoute,
  AuthenticatedExpensesIndexLazyRoute: AuthenticatedExpensesIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedProductsIndexLazyRoute: AuthenticatedProductsIndexLazyRoute,
  AuthenticatedPurchaseIndexLazyRoute: AuthenticatedPurchaseIndexLazyRoute,
  AuthenticatedReportsIndexLazyRoute: AuthenticatedReportsIndexLazyRoute,
  AuthenticatedSalesIndexLazyRoute: AuthenticatedSalesIndexLazyRoute,
  AuthenticatedSuppliersIndexLazyRoute: AuthenticatedSuppliersIndexLazyRoute,
  AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
  AuthenticatedExpensesApproveIndexLazyRoute:
    AuthenticatedExpensesApproveIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/customers/$customerId': typeof AuthenticatedCustomersCustomerIdRoute
  '/products/add': typeof AuthenticatedProductsAddRoute
  '/products/stock-management': typeof AuthenticatedProductsStockManagementRoute
  '/reports/accounting': typeof AuthenticatedReportsAccountingRoute
  '/reports/balance-sheet': typeof AuthenticatedReportsBalanceSheetRoute
  '/reports/cash-flow': typeof AuthenticatedReportsCashFlowRoute
  '/reports/expenses': typeof AuthenticatedReportsExpensesRoute
  '/reports/inventory': typeof AuthenticatedReportsInventoryRoute
  '/reports/profit-loss': typeof AuthenticatedReportsProfitLossRoute
  '/reports/sales-report': typeof AuthenticatedReportsSalesReportRoute
  '/sales/$id': typeof AuthenticatedSalesIdRoute
  '/sales/salesorders': typeof AuthenticatedSalesSalesordersRoute
  '/suppliers/$supplierId': typeof AuthenticatedSuppliersSupplierIdRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/categories': typeof AuthenticatedCategoriesIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/customers': typeof AuthenticatedCustomersIndexLazyRoute
  '/expenses': typeof AuthenticatedExpensesIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/products': typeof AuthenticatedProductsIndexLazyRoute
  '/purchase': typeof AuthenticatedPurchaseIndexLazyRoute
  '/reports': typeof AuthenticatedReportsIndexLazyRoute
  '/sales': typeof AuthenticatedSalesIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/suppliers': typeof AuthenticatedSuppliersIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/expenses/approve': typeof AuthenticatedExpensesApproveIndexLazyRoute
}

export interface FileRoutesByTo {
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/customers/$customerId': typeof AuthenticatedCustomersCustomerIdRoute
  '/products/add': typeof AuthenticatedProductsAddRoute
  '/products/stock-management': typeof AuthenticatedProductsStockManagementRoute
  '/reports/accounting': typeof AuthenticatedReportsAccountingRoute
  '/reports/balance-sheet': typeof AuthenticatedReportsBalanceSheetRoute
  '/reports/cash-flow': typeof AuthenticatedReportsCashFlowRoute
  '/reports/expenses': typeof AuthenticatedReportsExpensesRoute
  '/reports/inventory': typeof AuthenticatedReportsInventoryRoute
  '/reports/profit-loss': typeof AuthenticatedReportsProfitLossRoute
  '/reports/sales-report': typeof AuthenticatedReportsSalesReportRoute
  '/sales/$id': typeof AuthenticatedSalesIdRoute
  '/sales/salesorders': typeof AuthenticatedSalesSalesordersRoute
  '/suppliers/$supplierId': typeof AuthenticatedSuppliersSupplierIdRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/categories': typeof AuthenticatedCategoriesIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/customers': typeof AuthenticatedCustomersIndexLazyRoute
  '/expenses': typeof AuthenticatedExpensesIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/products': typeof AuthenticatedProductsIndexLazyRoute
  '/purchase': typeof AuthenticatedPurchaseIndexLazyRoute
  '/reports': typeof AuthenticatedReportsIndexLazyRoute
  '/sales': typeof AuthenticatedSalesIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/suppliers': typeof AuthenticatedSuppliersIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/expenses/approve': typeof AuthenticatedExpensesApproveIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/customers/$customerId': typeof AuthenticatedCustomersCustomerIdRoute
  '/_authenticated/products/add': typeof AuthenticatedProductsAddRoute
  '/_authenticated/products/stock-management': typeof AuthenticatedProductsStockManagementRoute
  '/_authenticated/reports/accounting': typeof AuthenticatedReportsAccountingRoute
  '/_authenticated/reports/balance-sheet': typeof AuthenticatedReportsBalanceSheetRoute
  '/_authenticated/reports/cash-flow': typeof AuthenticatedReportsCashFlowRoute
  '/_authenticated/reports/expenses': typeof AuthenticatedReportsExpensesRoute
  '/_authenticated/reports/inventory': typeof AuthenticatedReportsInventoryRoute
  '/_authenticated/reports/profit-loss': typeof AuthenticatedReportsProfitLossRoute
  '/_authenticated/reports/sales-report': typeof AuthenticatedReportsSalesReportRoute
  '/_authenticated/sales/$id': typeof AuthenticatedSalesIdRoute
  '/_authenticated/sales/salesorders': typeof AuthenticatedSalesSalesordersRoute
  '/_authenticated/suppliers/$supplierId': typeof AuthenticatedSuppliersSupplierIdRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
  '/_authenticated/categories/': typeof AuthenticatedCategoriesIndexLazyRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexLazyRoute
  '/_authenticated/customers/': typeof AuthenticatedCustomersIndexLazyRoute
  '/_authenticated/expenses/': typeof AuthenticatedExpensesIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/products/': typeof AuthenticatedProductsIndexLazyRoute
  '/_authenticated/purchase/': typeof AuthenticatedPurchaseIndexLazyRoute
  '/_authenticated/reports/': typeof AuthenticatedReportsIndexLazyRoute
  '/_authenticated/sales/': typeof AuthenticatedSalesIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/suppliers/': typeof AuthenticatedSuppliersIndexLazyRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
  '/_authenticated/expenses/approve/': typeof AuthenticatedExpensesApproveIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/settings'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/customers/$customerId'
    | '/products/add'
    | '/products/stock-management'
    | '/reports/accounting'
    | '/reports/balance-sheet'
    | '/reports/cash-flow'
    | '/reports/expenses'
    | '/reports/inventory'
    | '/reports/profit-loss'
    | '/reports/sales-report'
    | '/sales/$id'
    | '/sales/salesorders'
    | '/suppliers/$supplierId'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/categories'
    | '/chats'
    | '/customers'
    | '/expenses'
    | '/help-center'
    | '/products'
    | '/purchase'
    | '/reports'
    | '/sales'
    | '/settings/'
    | '/suppliers'
    | '/users'
    | '/expenses/approve'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/customers/$customerId'
    | '/products/add'
    | '/products/stock-management'
    | '/reports/accounting'
    | '/reports/balance-sheet'
    | '/reports/cash-flow'
    | '/reports/expenses'
    | '/reports/inventory'
    | '/reports/profit-loss'
    | '/reports/sales-report'
    | '/sales/$id'
    | '/sales/salesorders'
    | '/suppliers/$supplierId'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/categories'
    | '/chats'
    | '/customers'
    | '/expenses'
    | '/help-center'
    | '/products'
    | '/purchase'
    | '/reports'
    | '/sales'
    | '/settings'
    | '/suppliers'
    | '/users'
    | '/expenses/approve'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/customers/$customerId'
    | '/_authenticated/products/add'
    | '/_authenticated/products/stock-management'
    | '/_authenticated/reports/accounting'
    | '/_authenticated/reports/balance-sheet'
    | '/_authenticated/reports/cash-flow'
    | '/_authenticated/reports/expenses'
    | '/_authenticated/reports/inventory'
    | '/_authenticated/reports/profit-loss'
    | '/_authenticated/reports/sales-report'
    | '/_authenticated/sales/$id'
    | '/_authenticated/sales/salesorders'
    | '/_authenticated/suppliers/$supplierId'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/apps/'
    | '/_authenticated/categories/'
    | '/_authenticated/chats/'
    | '/_authenticated/customers/'
    | '/_authenticated/expenses/'
    | '/_authenticated/help-center/'
    | '/_authenticated/products/'
    | '/_authenticated/purchase/'
    | '/_authenticated/reports/'
    | '/_authenticated/sales/'
    | '/_authenticated/settings/'
    | '/_authenticated/suppliers/'
    | '/_authenticated/users/'
    | '/_authenticated/expenses/approve/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/customers/$customerId",
        "/_authenticated/products/add",
        "/_authenticated/products/stock-management",
        "/_authenticated/reports/accounting",
        "/_authenticated/reports/balance-sheet",
        "/_authenticated/reports/cash-flow",
        "/_authenticated/reports/expenses",
        "/_authenticated/reports/inventory",
        "/_authenticated/reports/profit-loss",
        "/_authenticated/reports/sales-report",
        "/_authenticated/sales/$id",
        "/_authenticated/sales/salesorders",
        "/_authenticated/suppliers/$supplierId",
        "/_authenticated/apps/",
        "/_authenticated/categories/",
        "/_authenticated/chats/",
        "/_authenticated/customers/",
        "/_authenticated/expenses/",
        "/_authenticated/help-center/",
        "/_authenticated/products/",
        "/_authenticated/purchase/",
        "/_authenticated/reports/",
        "/_authenticated/sales/",
        "/_authenticated/suppliers/",
        "/_authenticated/users/",
        "/_authenticated/expenses/approve/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/customers/$customerId": {
      "filePath": "_authenticated/customers/$customerId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/add": {
      "filePath": "_authenticated/products/add.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/stock-management": {
      "filePath": "_authenticated/products/stock-management.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/accounting": {
      "filePath": "_authenticated/reports/accounting.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/balance-sheet": {
      "filePath": "_authenticated/reports/balance-sheet.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/cash-flow": {
      "filePath": "_authenticated/reports/cash-flow.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/expenses": {
      "filePath": "_authenticated/reports/expenses.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/inventory": {
      "filePath": "_authenticated/reports/inventory.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/profit-loss": {
      "filePath": "_authenticated/reports/profit-loss.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/sales-report": {
      "filePath": "_authenticated/reports/sales-report.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sales/$id": {
      "filePath": "_authenticated/sales/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sales/salesorders": {
      "filePath": "_authenticated/sales/salesorders.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/suppliers/$supplierId": {
      "filePath": "_authenticated/suppliers/$supplierId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/categories/": {
      "filePath": "_authenticated/categories/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/customers/": {
      "filePath": "_authenticated/customers/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/expenses/": {
      "filePath": "_authenticated/expenses/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/": {
      "filePath": "_authenticated/products/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/purchase/": {
      "filePath": "_authenticated/purchase/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/": {
      "filePath": "_authenticated/reports/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sales/": {
      "filePath": "_authenticated/sales/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/suppliers/": {
      "filePath": "_authenticated/suppliers/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/expenses/approve/": {
      "filePath": "_authenticated/expenses/approve/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
